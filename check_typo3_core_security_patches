#!/bin/bash

STATE_OK=0
STATE_WARNING=1
STATE_CRITICAL=2
STATE_UNKNOWN=3
STATE_DEPENDENT=4

critical="false"
unknown="false"

declare -a criticals
declare -a unknowns

declare -a latest_secure_versions
declare -a updatable

# Find the latest core versions which include security updates
grep_latest_secure_version() {
php -r "                                                             \
  \$doc = new \DOMDocument();                                        \
  @\$doc->loadHTMLFile(\"https://get.typo3.org/list/version/$1\");   \
  \$elements = \$doc->getElementsByTagName('tr');                    \
  if (!is_null(\$elements)) {                                        \
    foreach (\$elements as \$element) {                              \
      \$nodes = \$element->childNodes;                               \
      foreach (\$nodes as \$node) {                                  \
        if (\$node->nodeValue === 'security') {                      \
          foreach (\$nodes as \$node) {                              \
            if (\$node->nodeType == XML_ELEMENT_NODE &&              \
            \$node->tagName === 'th' && !is_null(\$node)) {          \
              echo trim(\"\$node->nodeValue\");                      \
              return;                                                \
            }                                                        \
          }                                                          \
        }                                                            \
      }                                                              \
    }                                                                \
  }                                                                  \
"                                                                    \
| grep -Eo '([0-9]{1,}\.?){3}'
}

is_upgratable() {
  for n in {1..3}; do
    [[ $(cut -d'.' -f$n <<< "${latest_secure_versions[$installed_major_version]}") -gt $(cut -d'.' -f$n <<< "$installed_version") ]] && return
  done
  false
}

# Find all PackageStates.php files on the server
# and iterate over the TYPO3 installations
while read -r webroot; do
  if [[ -L "$webroot/typo3_src" ]]; then
    # CONVENTUAL
    installed_version=$(readlink -m "$webroot/typo3_src" | grep -Eo '([0-9]{1,}\.?){3}$')
  else
    # COMPOSER
    installed_version=$(sed -rn "/name.*typo3\/cms-core/,/version/ {s/.*v(([0-9]{1,}\.?){3}).*/\1/p}" "$webroot/composer.lock")
  fi

  if [[ -z "$installed_version" ]]; then
    echo "Couldn't determine installed version for: $webroot"
    unknown="true"
  fi

  installed_major_version=${installed_version%%.*}

  [[ -z "${latest_secure_versions[$installed_major_version]}" ]] && latest_secure_versions[$installed_major_version]="$(grep_latest_secure_version "$installed_major_version")"

  if [[ -z "${latest_secure_versions[$installed_major_version]}" ]]; then
    echo "Couldn't get latest secure version (v$installed_major_version)"
    unknown="true"
  fi

  if is_upgratable; then
    echo "$webroot:$installed_version => ${latest_secure_versions[$installed_major_version]}"
    critical="true"
  fi
done < <(find /var/www -not \( -path /var/www/typo3 -prune \) -iname 'PackageStates.php' | awk -F '/typo3conf|/public' '{print $1}' | sort -u)


if [ "$critical" = "true" ]; then
  exit $STATE_CRITICAL
elif [ "$unknown" = "true" ]; then
  exit $STATE_UNKNOWN
else
  echo "Up to date"
  exit $STATE_OK
fi
